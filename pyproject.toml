[dependency-groups]
dev = [
    "docker",
    "mypy",
    "pandas-stubs",
    "pytest",
    "pytest-asyncio",
    "ruff",
]

[project]
name = "app"
version = "0.1.0"
requires-python = ">=3.10"
dependencies = [
    "atoti[jdbc]",
    "httpx",
    "pandas",
    "pydantic",
    "pydantic-settings",
    "typing-extensions",
]


[tool.mypy]
files = "app,skeleton,tests" # Remove once https://github.com/python/mypy/issues/10428 is fixed.
strict = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["docker", "docker.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--doctest-modules --strict-markers"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
filterwarnings = ["error"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = [
    "COM812",  # Covered by the formatter.
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D203",
    "D213",
    "E501",
    "E741",    # `l` is used for level (consistency with `h` for hierarchy and `m` for measure).
    "EM102",   # Not worth the annoyance.
    "ISC001",  # Covered by the formatter.
    "PLC0414", # Redundant imports are used for re-exporting (See https://peps.python.org/pep-0484/#stub-files).
    "S101",    # `assert` is useful when used correctly (https://realpython.com/python-assert-statement).
    "TCH",     # Pydantic needs to resolve type annotations at runtime.
    "TID252",
    "TRY003",  # Not worth the annoyance.
]
select = ["ALL"]

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["atoti", "pandas"]

[tool.ruff.lint.flake8-import-conventions.aliases]
atoti =  "tt"
pandas = "pd"

[tool.ruff.lint.isort]
combine-as-imports = true
